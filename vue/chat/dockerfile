# FROM node:lts-alpine

# # install simple http server for serving static content
# RUN npm install -g http-server

# # make the 'app' folder the current working directory
# WORKDIR /usr/src/app

# # copy both 'package.json' and 'package-lock.json' (if available)
# COPY package*.json /usr/src/app/

# # install project dependencies
# RUN npm install

# # copy project files and folders to the current working directory (i.e. 'app' folder)
# COPY . .

# # build app for production with minification
# RUN npm run build

# #FROM nginx:alpine as production-stage

# #RUN mkdir /app

# #COPY --from=builder / /

# #RUN rm /etc/nginx/conf.d/default.conf

# #COPY nginx/nginx.conf /etc/nginx/nginx.conf

# EXPOSE 8000

# CMD [ "http-server", "dist" ]

# #CMD [ "nginx", "-g", "daemon off;" ]
FROM node:lts-alpine as build-stage
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# production stage
FROM nginx:stable-alpine as production-stage
COPY --from=build-stage /app/dist /usr/share/nginx/html
RUN rm /etc/nginx/conf.d/default.conf

COPY nginx/nginx.conf /etc/nginx/conf.d
EXPOSE 8000
CMD ["nginx", "-g", "daemon off;"]